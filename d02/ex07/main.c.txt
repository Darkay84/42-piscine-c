/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: bmalepla <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2016/08/04 10:16:22 by bmalepla          #+#    #+#             */
/*   Updated: 2016/08/04 10:16:25 by bmalepla         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <unistd.h>

void	ft_putchar(char c)
{
    write (1, &c, 1);
}

void	ft_putstr(char *str)
{
    int i;
    
    i = 0;
    while (str[i])
    {
        ft_putchar(str[i]);
        i++;
    }
}

void	init_tab(char *tab, int lng)
{
    int i;
    
    i = 0;
    while (i != lng)
    {
        tab[i] = '0';
        i++;
    }
}

int checkme(char *str, int lng)
{
    int i;
    int n;
    
    n=1;
    i=0;
    
    while (1)
    {
        if  (str[i] >= str[i + n] && (i + n) < lng)
        {
            return (0);
        }
        else if ((i + n + 1) <= (lng - 1))
        {
            n++;
        }
        else if ((i + n) == (lng - 1) && i != (lng - 1))
        {
            i++;
            n = 1;
        }
        else if (i == (lng - 1))
        {
            return (1);
        }
    }
    
}

int		incr(char *str, int lng)
{
    int i;
    int j;
    
    i = lng - 1;
    j = lng - 1;
    if (str[i] == '9')
    {
        while (i >= 0 && str[i] == '9')
        {
            i--;
        }
        if (i >= 0)
        {
            while (j != i && str[j] == '9')
            {
                str[j] = '0';
                j--;
            }
            str[i]++;
            return (1);
        }
        return (0);
    }
    else
        str[i]++;
    return (1);
}

void	ft_print_combn(int lng)
{
    char arr[] = {"A","B","C","D","E","F","G","H","I","J"};
    ft_comb_make(arr, 4, 0, 3);
}

void    ft_comb_make(char arr[], int len, int start, inr rslt)
{
    char result[];
    
    if (len ==0)
    {
        /*print relsut*/
        return 0;
    }
    while (start <= len)
    {
        result[rslt - len] = arr[start];
        ft_comb_make(arr, len-1, i+1, rslt)
        start++;
    }
}

int main(int argc, const char *argv[])
{
    int lng;
    
    lng = 2;
    
    ft_print_combn(lng);
    return 0;
}
